{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Provider, Web3Provider } from \"@ethersproject/providers\";\nimport { createModuleLogger } from \"@metamask/utils\";\n\nimport { ENTRYPOINT } from \"./constants\";\nimport { projectLogger } from \"./logger\";\nimport type {\n  PrepareUserOperationRequest,\n  SignUserOperationRequest,\n  SmartContractAccount,\n  UpdateUserOperationRequest,\n} from \"@metamask/user-operation-controller\";\nimport { BUNDLER_URL_BY_CHAIN_ID } from \"./constants\";\nimport { signUserOperation } from \"./ecdsa\";\nimport {\n  getCallData,\n  getDummySignature,\n  getInitCode,\n  getNonce,\n  getSender,\n} from \"./SimpleAccount\";\nimport {\n  getDummyPaymasterAndData,\n  getPaymasterAndData,\n} from \"./VerifyingPaymaster\";\n\nconst log = createModuleLogger(projectLogger, \"simple-account-snap\");\n\nexport default class SimpleSmartAccount implements SmartContractAccount {\n  #owner: string;\n\n  #paymasterAddress: string | undefined;\n\n  #privateKey: string;\n\n  #provider: Provider;\n\n  #salt: string;\n\n  constructor(\n    owner: string,\n    salt: string,\n    paymasterAddress: string | undefined,\n    privateKey: string,\n    provider: Provider\n  ) {\n    this.#owner = owner;\n    this.#salt = salt;\n    this.#paymasterAddress = paymasterAddress;\n    this.#privateKey = privateKey;\n    this.#provider = new Web3Provider(provider as any);\n  }\n\n  async prepareUserOperation(request: PrepareUserOperationRequest) {\n    log(\"Received user operation request\");\n\n    const { chainId, data, to, value } = request;\n\n    const potentialInitCode = getInitCode(this.#owner, this.#salt);\n    const sender = await getSender(potentialInitCode, this.#provider);\n    const callData = getCallData(to, value, data, sender);\n    const code = await this.#provider.getCode(sender);\n    const isDeployed = Boolean(code) && code !== \"0x\";\n    const initCode = isDeployed ? undefined : potentialInitCode;\n    const nonce = await getNonce(sender, isDeployed, this.#provider);\n    const bundler = this.#getBundler(chainId) as string;\n    const dummySignature = getDummySignature();\n    const dummyPaymasterAndData = getDummyPaymasterAndData(\n      this.#paymasterAddress\n    );\n\n    return {\n      bundler,\n      callData,\n      dummyPaymasterAndData,\n      dummySignature,\n      initCode,\n      sender,\n      nonce,\n    };\n  }\n\n  async updateUserOperation(request: UpdateUserOperationRequest) {\n    log(\"Received paymaster request\", {\n      paymasterAddress: this.#paymasterAddress,\n    });\n\n    const { userOperation } = request;\n    const paymasterAddress = this.#paymasterAddress;\n\n    const paymasterAndData = paymasterAddress\n      ? await getPaymasterAndData(\n          paymasterAddress,\n          0,\n          0,\n          userOperation,\n          this.#privateKey,\n          this.#provider\n        )\n      : undefined;\n\n    if (!paymasterAddress) {\n      log(\"Skipping paymaster\");\n    }\n\n    return { paymasterAndData };\n  }\n\n  async signUserOperation(request: SignUserOperationRequest) {\n    log(\"Received user operation signature request\");\n\n    const { chainId, userOperation } = request;\n\n    const signature = await signUserOperation(\n      userOperation,\n      ENTRYPOINT,\n      chainId,\n      this.#privateKey\n    );\n\n    return {\n      signature,\n    };\n  }\n\n  #getBundler(chainId: string): string | undefined {\n    return (BUNDLER_URL_BY_CHAIN_ID as any)[chainId];\n  }\n}\n"]}