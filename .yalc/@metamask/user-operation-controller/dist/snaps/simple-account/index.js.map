{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/snaps/simple-account/index.ts"],"names":[],"mappings":";AAAA,6DAA6D;AAC7D,qCAAqC;;;;;;;;;;;AAErC,wDAAwD;AACxD,2CAAqD;AAErD,yCAA6C;AAE7C,mDAAgF;AAChF,6DAA2D;AAE3D,MAAM,GAAG,GAAG,IAAA,0BAAkB,EAAC,sBAAa,EAAE,qBAAqB,CAAC,CAAC;AAErE,MAAM,sBAAsB,GAA2B,CAAO,OAAO,EAAE,EAAE;IACvE,GAAG,CAAC,iCAAiC,CAAC,CAAC;IAEvC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC;IAE9C,MAAM,QAAQ,GAAG,IAAI,wBAAY,CAAC,QAAe,CAAC,CAAC;IAEnD,MAAM,iBAAiB,GAAG,IAAA,2BAAW,EACnC,OAAO,CAAC,GAAG,CAAC,oBAAqB,EACjC,OAAO,CAAC,GAAG,CAAC,mBAAoB,CACjC,CAAC;IAEF,MAAM,MAAM,GAAG,MAAM,IAAA,yBAAS,EAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;IAC5D,MAAM,QAAQ,GAAG,IAAA,2BAAW,EAAC,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IACtD,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC5C,MAAM,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,CAAC;IAClD,MAAM,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC;IACvD,MAAM,KAAK,GAAG,MAAM,IAAA,wBAAQ,EAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;IAE3D,OAAO;QACL,QAAQ;QACR,QAAQ;QACR,KAAK;QACL,MAAM;KACP,CAAC;AACJ,CAAC,CAAA,CAAC;AAEF,MAAM,kBAAkB,GAAuB,CAAO,OAAO,EAAE,EAAE;IAC/D,GAAG,CACD,4BAA4B,EAC5B,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAChC,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAC/B,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAC9B,CAAC;IAEF,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC;IACxD,MAAM,QAAQ,GAAG,IAAI,wBAAY,CAAC,QAAe,CAAC,CAAC;IACnD,MAAM,gBAAgB,GAAG,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;IAEvD,MAAM,gBAAgB,GAAG,gBAAgB;QACvC,CAAC,CAAC,MAAM,IAAA,wCAAmB,EACvB,gBAAgB,EAChB,CAAC,EACD,CAAC,EACD,aAAa,EACb,UAAU,EACV,QAAQ,CACT;QACH,CAAC,CAAC,IAAI,CAAC;IAET,IAAI,CAAC,gBAAgB,EAAE;QACrB,GAAG,CAAC,oBAAoB,CAAC,CAAC;KAC3B;IAED,OAAO,EAAE,gBAAgB,EAAE,CAAC;AAC9B,CAAC,CAAA,CAAC;AAEF,kBAAe;IACb,sBAAsB;IACtB,kBAAkB;CACnB,CAAC","sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable n/no-process-env */\n\nimport { Web3Provider } from '@ethersproject/providers';\nimport { createModuleLogger } from '@metamask/utils';\n\nimport { projectLogger } from '../../logger';\nimport type { OnPaymasterHandler, OnUserOperationHandler } from '../types';\nimport { getCallData, getInitCode, getNonce, getSender } from './SimpleAccount';\nimport { getPaymasterAndData } from './VerifyingPaymaster';\n\nconst log = createModuleLogger(projectLogger, 'simple-account-snap');\n\nconst onUserOperationRequest: OnUserOperationHandler = async (request) => {\n  log('Received user operation request');\n\n  const { data, ethereum, to, value } = request;\n\n  const provider = new Web3Provider(ethereum as any);\n\n  const potentialInitCode = getInitCode(\n    process.env.SIMPLE_ACCOUNT_OWNER!,\n    process.env.SIMPLE_ACCOUNT_SALT!,\n  );\n\n  const sender = await getSender(potentialInitCode, provider);\n  const callData = getCallData(to, value, data, sender);\n  const code = await provider.getCode(sender);\n  const isDeployed = Boolean(code) && code !== '0x';\n  const initCode = isDeployed ? '0x' : potentialInitCode;\n  const nonce = await getNonce(sender, isDeployed, provider);\n\n  return {\n    callData,\n    initCode,\n    nonce,\n    sender,\n  };\n};\n\nconst onPaymasterRequest: OnPaymasterHandler = async (request) => {\n  log(\n    'Received paymaster request',\n    process.env.SIMPLE_ACCOUNT_OWNER,\n    process.env.SIMPLE_ACCOUNT_SALT,\n    process.env.PAYMASTER_ADDRESS,\n  );\n\n  const { userOperation, ethereum, privateKey } = request;\n  const provider = new Web3Provider(ethereum as any);\n  const paymasterAddress = process.env.PAYMASTER_ADDRESS;\n\n  const paymasterAndData = paymasterAddress\n    ? await getPaymasterAndData(\n        paymasterAddress,\n        0,\n        0,\n        userOperation,\n        privateKey,\n        provider,\n      )\n    : '0x';\n\n  if (!paymasterAddress) {\n    log('Skipping paymaster');\n  }\n\n  return { paymasterAndData };\n};\n\nexport default {\n  onUserOperationRequest,\n  onPaymasterRequest,\n};\n"]}