{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/snaps/index.ts"],"names":[],"mappings":";AAAA,wCAAwC;;;;;;AAExC,sEAAiD;AASjD,MAAM,WAAW,GAAG;IAClB,gBAAgB,EAAE,wBAAiB;CACpC,CAAC;AAEF,SAAgB,4BAA4B,CAC1C,MAAc,EACd,OAA+B;IAE/B,OAAO,cAAc,CAAC,MAAM,CAAC,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;AAChE,CAAC;AALD,oEAKC;AAED,SAAgB,wBAAwB,CACtC,MAAc,EACd,OAA2B;IAE3B,OAAO,cAAc,CAAC,MAAM,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;AAC5D,CAAC;AALD,4DAKC;AAED,SAAS,cAAc,CAAC,MAAc;IACpC,MAAM,KAAK,GAAG,MAAkC,CAAC;IACjD,MAAM,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;IAEvC,IAAI,CAAC,WAAW,EAAE;QAChB,MAAM,IAAI,KAAK,CAAC,6BAA6B,MAAM,EAAE,CAAC,CAAC;KACxD;IAED,OAAO,WAAW,CAAC;AACrB,CAAC","sourcesContent":["/* eslint-disable jsdoc/require-jsdoc */\n\nimport simpleAccountSnap from './simple-account';\nimport type {\n  AccountSnap,\n  OnPaymasterRequest,\n  OnPaymasterResponse,\n  OnUserOperationRequest,\n  OnUserOperationResponse,\n} from './types';\n\nconst SNAPS_BY_ID = {\n  'simple-account': simpleAccountSnap,\n};\n\nexport function sendSnapUserOperationRequest(\n  snapId: string,\n  request: OnUserOperationRequest,\n): Promise<OnUserOperationResponse> {\n  return getAccountSnap(snapId).onUserOperationRequest(request);\n}\n\nexport function sendSnapPaymasterRequest(\n  snapId: string,\n  request: OnPaymasterRequest,\n): Promise<OnPaymasterResponse> {\n  return getAccountSnap(snapId).onPaymasterRequest(request);\n}\n\nfunction getAccountSnap(snapId: string): AccountSnap {\n  const idKey = snapId as keyof typeof SNAPS_BY_ID;\n  const accountSnap = SNAPS_BY_ID[idKey];\n\n  if (!accountSnap) {\n    throw new Error(`No SCA snap found for ID: ${snapId}`);\n  }\n\n  return accountSnap;\n}\n"]}